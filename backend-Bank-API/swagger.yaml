swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string  
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /accounts:
    post:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Create Account
      description: API to create a new account
      parameters:
        - in: body
          name: body
          description: Account details
          required: true
          schema:
            $ref: '#/definitions/Account'
      produces:
        - application/json
      responses:
        '200':
          description: Account created successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Get Account Details
      description: API to get details of a specific account
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account details retrieved successfully
          schema:
            $ref: '#/definitions/AccountDetailsResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Update Account
      description: API to update a specific account
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: body
          name: body
          description: Updated account details
          required: true
          schema:
            $ref: '#/definitions/Account'
      produces:
        - application/json
      responses:
        '200':
          description: Account updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Delete Account
      description: API to delete a specific account
      parameters:
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account deleted successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: List Transactions
      description: API to list all transactions for a specified date range, grouped by account
      parameters:
        - in: query
          name: startDate
          description: Start date of the transactions range
          required: false
          type: string
          format: date-time
        - in: query
          name: endDate
          description: End date of the transactions range
          required: false
          type: string
          format: date-time
        - in: query
          name: accountId
          description: ID of the account
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions listed successfully
          schema:
            $ref: '#/definitions/GroupedTransactionListResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transaction Details
      description: API to get details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction
      description: API to update an existing transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Updated transaction details
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: "JWT Authorization header using the Bearer scheme"
definitions:
  ApiResponse:
    properties:
      message:
        type: string
        description: Response message
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  LoginResponse:
    properties:
      token:
        type: string
        description: JWT token
  UserProfile:
    properties:
      email:
        type: string
        description: user email
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Account:
    properties:
        userEmail:
          type: string
          description: Email of the user who owns the account
        accountName:
          type: string
          description: Name of the account
        accountType:
          type: string
          description: Type of account (e.g., savings, checking)
        balance:
          type: number
          description: Initial account balance
  AccountDetailsResponse:
    properties:
      account:
        $ref: '#/definitions/Account'
  Transaction:
    properties:
      accountId:
        type: string
        description: Account ID
      amount:
        type: number
        description: Transaction amount
      description:
        type: string
        description: Transaction description
      date:
        type: string
        format: date-time
        description: Transaction date
  GroupedTransactionListResponse:
    properties:
      accounts:
        type: array
        items:
          properties:
            accountId:
              type: string
              description: Account ID
            transactions:
              type: array
              items:
                $ref: '#/definitions/Transaction'
  TransactionDetailsResponse:
    properties:
      transaction:
        $ref: '#/definitions/Transaction'